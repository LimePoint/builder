package sessionsrv;

enum OAuthProvider {
  GitHub = 0;
}

message Account {
  optional uint64 id = 1;
  optional string email = 2;
  optional string name = 3;
}

// get an account by GH username
message AccountGet {
  optional string name = 1;
}

message AccountSearch {
  optional AccountSearchKey key = 1;
  optional string value = 2;
}

enum AccountSearchKey {
  Id = 0;
  Name = 1;
}

message GrantFlagToTeam {
  optional uint32 flag = 1;
  optional uint64 team_id = 2;
}

message RevokeFlagFromTeam {
  optional uint32 flag = 1;
  optional uint64 team_id = 2;
}

message ListFlagGrants {
  optional uint32 flag = 1;
}

message FlagGrants {
  repeated uint64 teams = 1;
}

message Session {
  optional uint64 id = 1;
  optional string email = 2;
  optional string name = 3;
  optional string token = 4;
  optional uint32 flags = 5;
}

message SessionToken {
  optional string token = 1;
  optional uint64 owner_id = 2;
  optional OAuthProvider provider = 3;
}

message SessionCreate {
  optional string token = 1;
  optional uint64 extern_id = 2;
  optional string email = 3;
  optional string name = 4;
  optional OAuthProvider provider = 5;
}

message SessionGet {
  optional string token = 1;
}
